import dotenv from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, resolve } from 'path';

// üëá –ü–†–ê–í–ò–õ–¨–ù–ò–ô –®–õ–Ø–• –î–û .env –§–ê–ô–õ–£
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
dotenv.config({ path: resolve(__dirname, '../../.env') }); // üëà –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–ª—è—Ö

import mongoose from 'mongoose';
import User from './models/User.js';

// üëá –ü–†–Ø–ú–ï –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –ë–ï–ó DB.js
const MONGO_URI = process.env.MONGO_URI;

async function connectDB() {
    try {
        await mongoose.connect(MONGO_URI);
        console.log("MongoDB connected ‚úÖ");
    } catch (error) {
        console.error("MongoDB connection error ‚ùå:", error.message);
        console.log("MONGO_URI:", MONGO_URI); // üëà –î–æ–¥–∞–º–æ –¥–ª—è –¥–µ–±–∞–≥—É
        process.exit(1);
    }
}

await connectDB();

// –†–µ—à—Ç–∞ –∫–æ–¥—É –±–µ–∑ –∑–º—ñ–Ω...
const admins = [
    { telegramId: 1795893529, firstName: '–°–≤—è—Ç–æ—Å–ª–∞–≤', role: 'admin' },
    { telegramId: 1188397898, firstName: '–û–ª–µ–∫—Å–∞–Ω–¥—Ä', role: 'admin' },
    { telegramId: 1506727765, firstName: '–ú–∞–∫—Å–∏–º', role: 'admin' }
];

for (const adminData of admins) {
    const adminUser = await User.findOneAndUpdate(
        { telegramId: adminData.telegramId },
        {
            telegramId: adminData.telegramId,
            firstName: adminData.firstName,
            role: 'admin'
        },
        { upsert: true, new: true }
    );
    console.log(`‚úÖ –ê–¥–º—ñ–Ω —Å—Ç–≤–æ—Ä–µ–Ω–∏–π: ${adminUser.firstName} (ID: ${adminUser.telegramId})`);
}

console.log('üéâ –í—Å—ñ —Ç—Ä–∏ –∞–¥–º—ñ–Ω–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ!');
process.exit();